{"version":3,"file":"static/js/162.00287653.chunk.js","mappings":"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","sources":["components/VisitorForm/VisitorFrom.js","utils/createDate.js","pages/Login/Login.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport authOperation from \"../../redux/auth/operations\";\nimport visitorOperation from \"../../redux/visitors/operations\";\nimport createData from \"../../utils/createDate\";\n\nfunction VisitorForm({ visitor, handleClose, setIsOpenModal, editForm }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(visitor ? `${visitor.name}` : \"\");\n  const [lastname, setlastname] = useState(\n    visitor ? `${visitor.lastname}` : \"\"\n  );\n\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"lastname\":\n        setlastname(value);\n        break;\n      case \"username\":\n        setUsername(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleVisitorSubmit = (event) => {\n    event.preventDefault();\n    if (visitor) {\n      const { id } = visitor;\n      dispatch(visitorOperation.update({ id, name, lastname }));\n      setIsOpenModal(false);\n    } else {\n      const date = createData();\n      dispatch(visitorOperation.create({ name, lastname, date }));\n    }\n  };\n\n  const handleLoginSubmit = (event) => {\n    event.preventDefault();\n    dispatch(authOperation.login({ username, password }));\n  };\n\n  return (\n    <Container className=\"w-100 h-100 d-flex justify-content-center p-0\">\n      {visitor || editForm ? (\n        <Form onSubmit={handleVisitorSubmit} className=\"text-center w-100\">\n          <Form.Group className=\"mb-3 text-start\">\n            <Form.Label>First name</Form.Label>\n            <Form.Control\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3 text-start\">\n            <Form.Label>Last name</Form.Label>\n            <Form.Control\n              name=\"lastname\"\n              type=\"text\"\n              value={lastname}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={handleClose}\n            disabled={!name || !lastname}\n          >\n            {visitor ? \"Update\" : \"Add\"}\n          </Button>\n        </Form>\n      ) : (\n        <Form\n          onSubmit={handleLoginSubmit}\n          className=\"text-center border border-1 rounded p-3\"\n          style={{ width: \"400px\" }}\n        >\n          <Form.Group className=\"mb-3 text-start\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              name=\"username\"\n              type=\"text\"\n              value={username}\n              placeholder=\"Enter username\"\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3 text-start\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"\n              Enter password\"\n              onChange={handleChange}\n              value={password}\n            />\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={!username || !password}\n          >\n            Login\n          </Button>\n        </Form>\n      )}\n    </Container>\n  );\n}\n\nVisitorForm.propTypes = {\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n  handleClose: PropTypes.func,\n  setIsOpenModal: PropTypes.func,\n  editForm: PropTypes.string,\n};\n\nexport default VisitorForm;\n","export default function createData() {\n  const data = new Date();\n  const dateToConvert = data.getTime();\n  const dateObject = new Date(dateToConvert);\n  const year = dateObject.getFullYear();\n  const month = String(dateObject.getMonth() + 1).padStart(2, \"0\");\n  const day = String(dateObject.getDate()).padStart(2, \"0\");\n  const hours = String(dateObject.getHours()).padStart(2, \"0\");\n  const minutes = String(dateObject.getMinutes()).padStart(2, \"0\");\n  const seconds = String(dateObject.getSeconds()).padStart(2, \"0\");\n\n  const formattedDateTime = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n  return formattedDateTime;\n}\n","import { Container } from \"react-bootstrap\";\nimport VisitorForm from \"../../components/VisitorForm/VisitorFrom\";\n\nconst Login = () => {\n  return (\n    <Container className=\"px-3 py-4\">\n      <h1 className=\"mb-4\">Login Form</h1>\n      <VisitorForm />\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["_ref","visitor","handleClose","setIsOpenModal","editForm","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","concat","name","_useState6","setName","_useState7","lastname","_useState8","setlastname","dispatch","useDispatch","handleChange","event","_event$currentTarget","currentTarget","value","_jsx","Container","className","children","_jsxs","Form","onSubmit","preventDefault","id","visitorOperation","update","date","dateToConvert","Date","getTime","dateObject","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","createData","create","Group","Label","Control","type","onChange","required","Button","variant","onClick","disabled","authOperation","login","style","width","placeholder","controlId","VisitorForm"],"sourceRoot":""}