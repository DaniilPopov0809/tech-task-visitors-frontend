{"version":3,"file":"static/js/231.20764e9b.chunk.js","mappings":"8QAsEA,MAhEA,WACE,IAAAA,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GACpB,IAAAC,EAAwBD,EAAME,cAAtBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACd,OAAQD,GACN,IAAK,WACHX,EAAYY,GACZ,MAEF,IAAK,WACHR,EAAYQ,GACZ,MAGF,QACE,OAEN,EAOA,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,eAAcC,UACjCC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,SARe,SAACX,GACpBA,EAAMY,iBACNf,EAASgB,EAAAA,EAAcC,MAAM,CAAEvB,SAAAA,EAAUI,SAAAA,IAC3C,EAMMY,UAAU,0CACVQ,MAAO,CAAEC,SAAU,SAAUR,SAAA,EAE7BC,EAAAA,EAAAA,MAACC,EAAAA,EAAKO,MAAK,CAACV,UAAU,kBAAiBC,SAAA,EACrCH,EAAAA,EAAAA,KAACK,EAAAA,EAAKQ,MAAK,CAAAV,SAAC,cACZH,EAAAA,EAAAA,KAACK,EAAAA,EAAKS,QAAO,CACXhB,KAAK,WACLiB,KAAK,OACLhB,MAAOb,EACP8B,YAAY,iBACZC,SAAUvB,EACVwB,UAAQ,QAGZd,EAAAA,EAAAA,MAACC,EAAAA,EAAKO,MAAK,CAACV,UAAU,kBAAkBiB,UAAU,oBAAmBhB,SAAA,EACnEH,EAAAA,EAAAA,KAACK,EAAAA,EAAKQ,MAAK,CAAAV,SAAC,cACZH,EAAAA,EAAAA,KAACK,EAAAA,EAAKS,QAAO,CACXhB,KAAK,WACLiB,KAAK,WACLC,YAAY,iBACZC,SAAUvB,EACVK,MAAOT,QAGXU,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACC,QAAQ,UAAUN,KAAK,SAASO,UAAWpC,IAAaI,EAASa,SAAC,cAMlF,ECxDA,EAVc,WAEZ,OACEC,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAApB,SAAA,EACAH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,gBACJH,EAAAA,EAAAA,KAACwB,EAAS,MAGd,C","sources":["components/LoginForm/LoginForm.js","pages/Login/Login.js"],"sourcesContent":["// import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport authOperation from \"../../redux/auth/operations\";\n\nfunction LoginForm() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case \"username\": {\n        setUsername(value);\n        break;\n      }\n      case \"password\": {\n        setPassword(value);\n        break;\n      }\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(authOperation.login({ username, password }));\n  };\n\n  return (\n    <Container className=\"w-100 h-100 \">\n      <Form\n        onSubmit={handleSubmit}\n        className=\"text-center border border-1 rounded p-3\"\n        style={{ maxWidth: \"500px\" }}\n      >\n        <Form.Group className=\"mb-3 text-start\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            name=\"username\"\n            type=\"text\"\n            value={username}\n            placeholder=\"Enter username\"\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3 text-start\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n            value={password}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" disabled={!username || !password}>\n          Login\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default LoginForm;\n\n// LoginForm.propTypes = {\n//   visitor: PropTypes.exact({\n//     id: PropTypes.string.isRequired,\n//     name: PropTypes.string,\n//     lastname: PropTypes.string,\n//     date: PropTypes.string,\n//   }),\n//   handleClose: PropTypes.func,\n//   setIsOpenModal: PropTypes.func,\n// };\n","import LoginForm from \"../../components/LoginForm/LoginForm\";\n\nconst Login = () => {\n\n  return (\n    <>\n    <h1>Login Form</h1>\n    <LoginForm/>\n    </> \n  );\n};\n\nexport default Login;\n"],"names":["_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","dispatch","useDispatch","handleChange","event","_event$currentTarget","currentTarget","name","value","_jsx","Container","className","children","_jsxs","Form","onSubmit","preventDefault","authOperation","login","style","maxWidth","Group","Label","Control","type","placeholder","onChange","required","controlId","Button","variant","disabled","_Fragment","LoginForm"],"sourceRoot":""}