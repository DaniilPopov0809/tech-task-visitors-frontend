{"version":3,"file":"static/js/581.6f2f0cd5.chunk.js","mappings":"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","sources":["components/VisitorsTable/VisitorTabele.styled.jsx","components/VisitorForm/VisitorFrom.js","utils/createDate.js","components/VisitorModal/VisitorModal.js","components/ButtonUpdateVisitor/ButtonUpdateVisitor.js","components/ButtonsModal/ButtonsModal.js","redux/visitors/selectors.js","utils/sortVisitors.js","components/VisitorsTable/VisitorsTable.js","components/ButtonAddVisitor/ButtonAddVisitor.js","components/Loader/Loader.js","pages/Visitors/Visitors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport {\n  TiArrowUnsorted,\n  TiArrowSortedDown,\n  TiArrowSortedUp,\n} from \"react-icons/ti\";\n\nexport const ArrowUpDown = styled(TiArrowUnsorted)`\n  font-size: 18px;\n  margin-left: 8px;\n`;\n\nexport const ArrowUp = styled(TiArrowSortedUp)`\n  font-size: 18px;\n  margin-left: 8px;\n`;\n\nexport const ArrowDown = styled(TiArrowSortedDown)`\n  font-size: 18px;\n  margin-left: 8px;\n`;\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Form } from \"react-bootstrap\";\nimport visitorOperation from \"../../redux/visitors/operations\";\nimport createData from \"../../utils/createDate\";\n\nfunction VisitorForm({ visitor, handleClose, setIsOpenModal }) {\n  const [name, setName] = useState(visitor ? `${visitor.name}` : \"\");\n  const [lastname, setlastname] = useState(\n    visitor ? `${visitor.lastname}` : \"\"\n  );\n\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case \"name\": {\n        setName(value);\n        break;\n      }\n      case \"lastname\": {\n        setlastname(value);\n        break;\n      }\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (visitor) {\n      const { id } = visitor;\n      dispatch(visitorOperation.update({ id, name, lastname }));\n      setIsOpenModal(false);\n    } else {\n      const date = createData();\n      dispatch(visitorOperation.create({ name, lastname, date }));\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} className=\"text-start\">\n        <Form.Group className=\"mb-3\">\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            name=\"lastname\"\n            type=\"text\"\n            value={lastname}\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={handleClose}\n          disabled={!name || !lastname}\n        >\n          {visitor ? \"Update\" : \"Add\"}\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nexport default VisitorForm;\n\nVisitorForm.propTypes = {\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n  handleClose: PropTypes.func,\n  setIsOpenModal: PropTypes.func,\n};\n","export default function createData() {\n  const data = new Date();\n  const dateToConvert = data.getTime();\n  const dateObject = new Date(dateToConvert); \n  const year = dateObject.getFullYear();\n  const month = String(dateObject.getMonth() + 1).padStart(2, \"0\");\n  const day = String(dateObject.getDate()).padStart(2, \"0\");\n  const hours = String(dateObject.getHours()).padStart(2, \"0\");\n  const minutes = String(dateObject.getMinutes()).padStart(2, \"0\");\n  const seconds = String(dateObject.getSeconds()).padStart(2, \"0\");\n\n  const formattedDateTime = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n  return formattedDateTime;\n}\n","import PropTypes from \"prop-types\";\nimport { Modal } from \"react-bootstrap\";\nimport VisitorForm from \"../VisitorForm/VisitorFrom\";\n\nconst VisitorModal = ({\n  visitor,\n  handleClose,\n  show,\n  setIsOpenModal,\n  inputOne,\n  inputTwo,\n}) => {\n  return (\n    <Modal show={show} onHide={handleClose} size=\"sm\">\n      <Modal.Header closeButton>\n        <Modal.Title>{visitor ? \"Update visitor\" : \"Add visitor\"}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <VisitorForm\n          visitor={visitor}\n          handleClose={handleClose}\n          setIsOpenModal={setIsOpenModal}\n          inputOne={inputOne}\n          inputTwo={inputTwo}\n        />\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default VisitorModal;\n\nVisitorModal.propTypes = {\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n  handleClose: PropTypes.func,\n  show: PropTypes.bool,\n  setIsOpenModal: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport VisitorModal from \"../VisitorModal/VisitorModal\";\n\nfunction ButtonUpdateVisitor({ visitor, setIsOpenModal }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Update\n      </Button>\n\n      <VisitorModal\n        visitor={visitor}\n        handleClose={handleClose}\n        show={show}\n        setIsOpenModal={setIsOpenModal}\n      />\n    </>\n  );\n}\n\nexport default ButtonUpdateVisitor;\n\nButtonUpdateVisitor.propTypes = {\n  setIsOpenModal: PropTypes.func,\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n};\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport ButtonUpdateVisitor from \"../ButtonUpdateVisitor/ButtonUpdateVisitor\";\nimport visitorOperation from \"../../redux/visitors/operations\";\n\nconst ButtonsModal = ({ setIsOpenModal, visitor }) => {\n  const dispatch = useDispatch();\n  return (\n    <div\n      className=\"modal show\"\n      style={{ display: \"block\", position: \"absolute\" }}\n    >\n      <Modal.Dialog size=\"sm\">\n        <Modal.Header closeButton onClick={() => setIsOpenModal(false)}>\n          <Modal.Title\n            style={{ fontSize: 20 }}\n          >{`What do with ${visitor.name} ${visitor.lastname}?`}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Button\n            style={{ marginRight: 16 }}\n            onClick={() => {\n              dispatch(visitorOperation.remove(visitor.id));\n              setIsOpenModal(false);\n            }}\n          >\n            Delete\n          </Button>\n          <ButtonUpdateVisitor\n            visitor={visitor}\n            setIsOpenModal={setIsOpenModal}\n          />\n        </Modal.Body>\n      </Modal.Dialog>\n    </div>\n  );\n};\n\nexport default ButtonsModal;\n\nButtonsModal.propTypes = {\n  setIsOpenModal: PropTypes.func,\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n};\n","export const selectVisitors = state => state.visitors;\nexport const selectVisitorsItems = state => state.visitors.items;\nexport const selectSortColumn = state => state.sort.sortColumn;\nexport const selectSortDirection = state => state.sort.sortDirection;\nexport const selectIsLoading = state => state.visitors.isLoading;","const sortVisitors = (visitors, sortColumn, sortDirection) => {\n    if (sortColumn) {\n        visitors.sort((a, b) => {\n          const valueA = a[sortColumn];\n          const valueB = b[sortColumn];\n    \n          return (\n            valueA.localeCompare(valueB, undefined, { sensitivity: \"base\" }) *\n            (sortDirection === \"asc\" ? 1 : -1)\n          );\n        });\n      }\n}\n\nexport default sortVisitors;","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table } from \"react-bootstrap\";\nimport { ArrowUpDown, ArrowUp, ArrowDown } from \"./VisitorTabele.styled\";\nimport ButtonsModal from \"../ButtonsModal/ButtonsModal\";\nimport visitorOperation from \"../../redux/visitors/operations\";\n\nimport {\n  selectSortColumn,\n  selectSortDirection,\n  selectVisitorsItems,\n} from \"../../redux/visitors/selectors\";\nimport {\n  setSortColumn,\n  setSortDirection,\n} from \"../../redux/visitors/sortSlice\";\nimport sortVisitors from \"../../utils/sortVisitors\";\n\nconst VisitorsTable = () => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [selectedVisitor, setSelectedVisitor] = useState(null);\n\n  const dispatch = useDispatch();\n  const sortColumn = useSelector(selectSortColumn);\n  const sortDirection = useSelector(selectSortDirection);\n\n  const visitors = useSelector(selectVisitorsItems);\n\n  useEffect(() => {\n    dispatch(visitorOperation.readAll());\n  }, [dispatch]);\n\n  const handleClickRow = (visitor) => {\n    setIsOpenModal(true);\n    setSelectedVisitor(visitor);\n  };\n\n  const handleSort = (column) => {\n    if (sortColumn === column) {\n      dispatch(setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\"));\n    } else {\n      dispatch(setSortColumn(column));\n      dispatch(setSortDirection(\"asc\"));\n    }\n  };\n\n  const sortedVisitors = [...visitors];\n  sortVisitors(sortedVisitors, sortColumn, sortDirection);\n\n  return (\n    <>\n      <Table striped bordered hover style={{ maxWidth: \"700px\" }}>\n        <thead>\n          <tr>\n            <th onClick={() => handleSort(\"name\")}>\n              Name\n              {(sortColumn === \"name\" && (\n                <span>\n                  {sortDirection === \"asc\" ? <ArrowUp /> : <ArrowDown />}\n                </span>\n              )) || <ArrowUpDown />}\n            </th>\n            <th onClick={() => handleSort(\"lastname\")}>\n              Last name\n              {(sortColumn === \"lastname\" && (\n                <span>\n                  {sortDirection === \"asc\" ? <ArrowUp /> : <ArrowDown />}\n                </span>\n              )) || <ArrowUpDown />}\n            </th>\n            <th onClick={() => handleSort(\"date\")}>\n              Time visit\n              {(sortColumn === \"date\" && (\n                <span>\n                  {sortDirection === \"asc\" ? <ArrowUp /> : <ArrowDown />}\n                </span>\n              )) || <ArrowUpDown />}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedVisitors.map((visitor) => {\n            return (\n              <tr key={visitor.id} onClick={() => handleClickRow(visitor)}>\n                <td>{visitor.name}</td>\n                <td>{visitor.lastname}</td>\n                <td>{visitor.date}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {isOpenModal && (\n        <ButtonsModal\n          visitor={selectedVisitor}\n          setIsOpenModal={setIsOpenModal}\n        />\n      )}\n    </>\n  );\n};\nexport default VisitorsTable;\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport VisitorModal from \"../VisitorModal/VisitorModal\";\n\nfunction ButtonAddVisitor({ visitor }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Add visitor\n      </Button>\n\n      <VisitorModal visitor={visitor} handleClose={handleClose} show={show} />\n    </>\n  );\n}\n\nexport default ButtonAddVisitor;\n\nButtonAddVisitor.propTypes = {\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n};\n","import Spinner from 'react-bootstrap/Spinner';\n\nfunction Loader() {\n  return (\n      <Spinner animation=\"border\" variant=\"primary\" />\n  );\n}\n\nexport default Loader;","import { useSelector } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport VisitorsTable from \"../../components/VisitorsTable/VisitorsTable\";\nimport ButtonAddVisitor from \"../../components/ButtonAddVisitor/ButtonAddVisitor\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { selectIsLoading } from \"../../redux/visitors/selectors\";\n\nconst Visitors = () => {\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <Container className=\"py-4 px-3\">\n      <h1 className=\"mb-3\">\"Visitors in the building:</h1>\n        <Container className=\"d-flex flex-column justify-content-center align-items-center p-0\">\n          <VisitorsTable />\n          {isLoading ? <Loader /> : <ButtonAddVisitor />}\n        </Container>\n      \n    </Container>\n  );\n};\n\nexport default Visitors;\n"],"names":["ArrowUpDown","styled","TiArrowUnsorted","_templateObject","_taggedTemplateLiteral","ArrowUp","TiArrowSortedUp","_templateObject2","ArrowDown","TiArrowSortedDown","_templateObject3","_ref","visitor","handleClose","setIsOpenModal","_useState","useState","concat","name","_useState2","_slicedToArray","setName","_useState3","lastname","_useState4","setlastname","dispatch","useDispatch","handleChange","event","_event$currentTarget","currentTarget","value","_jsx","_Fragment","children","_jsxs","Form","onSubmit","preventDefault","id","visitorOperation","update","date","dateToConvert","Date","getTime","dateObject","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","createData","create","className","Group","Label","Control","type","onChange","required","Button","variant","onClick","disabled","show","inputOne","inputTwo","Modal","onHide","size","Header","closeButton","Title","Body","VisitorForm","setShow","VisitorModal","style","display","position","Dialog","fontSize","marginRight","remove","ButtonUpdateVisitor","selectVisitorsItems","state","visitors","items","selectSortColumn","sort","sortColumn","selectSortDirection","sortDirection","selectIsLoading","isLoading","a","b","valueA","valueB","localeCompare","undefined","sensitivity","isOpenModal","selectedVisitor","setSelectedVisitor","useSelector","useEffect","readAll","handleSort","column","setSortDirection","setSortColumn","sortedVisitors","_toConsumableArray","sortVisitors","Table","striped","bordered","hover","maxWidth","map","handleClickRow","ButtonsModal","Spinner","animation","Container","VisitorsTable","Loader","ButtonAddVisitor"],"sourceRoot":""}