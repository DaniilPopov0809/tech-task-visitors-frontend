{"version":3,"file":"static/js/642.0a09bac4.chunk.js","mappings":"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","sources":["components/VisitorForm/VisitorFrom.js","utils/createDate.js","components/VisitorsTable/VisitorTabele.styled.jsx","components/VisitorModal/VisitorModal.js","components/ButtonVisitor/ButtonVisitor.js","components/ButtonsModal/ButtonsModal.js","redux/visitors/selectors.js","utils/sortVisitors.js","components/VisitorsTable/VisitorsTable.js","components/Loader/Loader.js","pages/Visitors/Visitors.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport authOperation from \"../../redux/auth/operations\";\nimport visitorOperation from \"../../redux/visitors/operations\";\nimport createData from \"../../utils/createDate\";\n\nfunction VisitorForm({ visitor, handleClose, setIsOpenModal, editForm }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(visitor ? `${visitor.name}` : \"\");\n  const [lastname, setlastname] = useState(\n    visitor ? `${visitor.lastname}` : \"\"\n  );\n\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"lastname\":\n        setlastname(value);\n        break;\n      case \"username\":\n        setUsername(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleVisitorSubmit = (event) => {\n    event.preventDefault();\n    if (visitor) {\n      const { id } = visitor;\n      dispatch(visitorOperation.update({ id, name, lastname }));\n      setIsOpenModal(false);\n    } else {\n      const date = createData();\n      dispatch(visitorOperation.create({ name, lastname, date }));\n    }\n  };\n\n  const handleLoginSubmit = (event) => {\n    event.preventDefault();\n    dispatch(authOperation.login({ username, password }));\n  };\n\n  return (\n    <Container className=\"w-100 h-100 d-flex justify-content-center p-0\">\n      {visitor || editForm ? (\n        <Form onSubmit={handleVisitorSubmit} className=\"text-center w-100\">\n          <Form.Group className=\"mb-3 text-start\">\n            <Form.Label>First name</Form.Label>\n            <Form.Control\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3 text-start\">\n            <Form.Label>Last name</Form.Label>\n            <Form.Control\n              name=\"lastname\"\n              type=\"text\"\n              value={lastname}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={handleClose}\n            disabled={!name || !lastname}\n          >\n            {visitor ? \"Update\" : \"Add\"}\n          </Button>\n        </Form>\n      ) : (\n        <Form\n          onSubmit={handleLoginSubmit}\n          className=\"text-center border border-1 rounded p-3\"\n          style={{ width: \"400px\" }}\n        >\n          <Form.Group className=\"mb-3 text-start\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              name=\"username\"\n              type=\"text\"\n              value={username}\n              placeholder=\"Enter username\"\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3 text-start\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"\n              Enter password\"\n              onChange={handleChange}\n              value={password}\n            />\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={!username || !password}\n          >\n            Login\n          </Button>\n        </Form>\n      )}\n    </Container>\n  );\n}\n\nVisitorForm.propTypes = {\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n  handleClose: PropTypes.func,\n  setIsOpenModal: PropTypes.func,\n  editForm: PropTypes.string,\n};\n\nexport default VisitorForm;\n","export default function createData() {\n  const data = new Date();\n  const dateToConvert = data.getTime();\n  const dateObject = new Date(dateToConvert);\n  const year = dateObject.getFullYear();\n  const month = String(dateObject.getMonth() + 1).padStart(2, \"0\");\n  const day = String(dateObject.getDate()).padStart(2, \"0\");\n  const hours = String(dateObject.getHours()).padStart(2, \"0\");\n  const minutes = String(dateObject.getMinutes()).padStart(2, \"0\");\n  const seconds = String(dateObject.getSeconds()).padStart(2, \"0\");\n\n  const formattedDateTime = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n  return formattedDateTime;\n}\n","import styled from \"styled-components\";\nimport {\n  TiArrowUnsorted,\n  TiArrowSortedDown,\n  TiArrowSortedUp,\n} from \"react-icons/ti\";\n\nexport const ArrowUpDown = styled(TiArrowUnsorted)`\n  font-size: 18px;\n  margin-left: 8px;\n`;\n\nexport const ArrowUp = styled(TiArrowSortedUp)`\n  font-size: 18px;\n  margin-left: 8px;\n`;\n\nexport const ArrowDown = styled(TiArrowSortedDown)`\n  font-size: 18px;\n  margin-left: 8px;\n`;\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Container, Modal } from \"react-bootstrap\";\nimport VisitorForm from \"../VisitorForm/VisitorFrom\";\nimport visitorOperation from \"../../redux/visitors/operations\";\n\nconst VisitorModal = ({ visitor, handleClose, show, setIsOpenModal, name }) => {\n  const dispatch = useDispatch();\n  return (\n    <Modal show={show} onHide={handleClose} size=\"sm\">\n      <Modal.Header closeButton>\n        {name === \"Delete\" ? (\n          <Modal.Title className=\"text-center\">\n            Delete {visitor.name} {visitor.lastname}?\n          </Modal.Title>\n        ) : (\n          <Modal.Title>\n            {visitor ? \"Update visitor\" : \"Add visitor\"}\n          </Modal.Title>\n        )}\n      </Modal.Header>\n      <Modal.Body>\n        {name !== \"Delete\" ? (\n          <VisitorForm\n            visitor={visitor}\n            handleClose={handleClose}\n            setIsOpenModal={setIsOpenModal}\n            editForm={\"editForm\"}\n          />\n        ) : (\n          <Container className=\"text-center\">\n            {\" \"}\n            <Button\n              className=\"me-4\"\n              onClick={() => {\n                dispatch(visitorOperation.remove(visitor.id));\n                setIsOpenModal(false);\n              }}\n            >\n              Yes\n            </Button>\n            <Button onClick={() => setIsOpenModal(false)}>No</Button>\n          </Container>\n        )}\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nVisitorModal.propTypes = {\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n  handleClose: PropTypes.func,\n  show: PropTypes.bool,\n  setIsOpenModal: PropTypes.func,\n  name: PropTypes.string,\n};\n\nexport default VisitorModal;\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport VisitorModal from \"../VisitorModal/VisitorModal\";\n\nfunction ButtonVisitor({ visitor, setIsOpenModal, name, nameClass }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow} className={nameClass}>\n        {name}\n      </Button>\n\n      <VisitorModal\n        visitor={visitor}\n        handleClose={handleClose}\n        show={show}\n        setIsOpenModal={setIsOpenModal}\n        name={name}\n      />\n    </>\n  );\n}\n\nButtonVisitor.propTypes = {\n  setIsOpenModal: PropTypes.func,\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n  name: PropTypes.string,\n  nameClass: PropTypes.string,\n};\n\nexport default ButtonVisitor;\n","import PropTypes from \"prop-types\";\nimport { Modal } from \"react-bootstrap\";\nimport ButtonVisitor from \"../ButtonVisitor/ButtonVisitor\";\n\nconst ButtonsModal = ({ setIsOpenModal, visitor }) => {\n  return (\n    <div\n      className=\"modal show\"\n      style={{ display: \"block\", position: \"absolute\" }}\n    >\n      <Modal.Dialog size=\"sm\">\n        <Modal.Header closeButton onClick={() => setIsOpenModal(false)}>\n          <Modal.Title\n            style={{ fontSize: 20 }}\n          >{`What do with ${visitor.name} ${visitor.lastname}?`}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <ButtonVisitor\n            visitor={visitor}\n            setIsOpenModal={setIsOpenModal}\n            name={\"Delete\"}\n            nameClass=\"me-4\"\n          />\n          <ButtonVisitor\n            visitor={visitor}\n            setIsOpenModal={setIsOpenModal}\n            name={\"Update\"}\n          />\n        </Modal.Body>\n      </Modal.Dialog>\n    </div>\n  );\n};\n\nButtonsModal.propTypes = {\n  setIsOpenModal: PropTypes.func,\n  visitor: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    lastname: PropTypes.string,\n    date: PropTypes.string,\n  }),\n};\n\nexport default ButtonsModal;\n","export const selectVisitors = state => state.visitors;\nexport const selectVisitorsItems = state => state.visitors.items;\nexport const selectSortColumn = state => state.sort.sortColumn;\nexport const selectSortDirection = state => state.sort.sortDirection;\nexport const selectIsLoading = state => state.visitors.isLoading;","const sortVisitors = (visitors, sortColumn, sortDirection) => {\n  if (sortColumn) {\n    visitors.sort((a, b) => {\n      const valueA = a[sortColumn];\n      const valueB = b[sortColumn];\n\n      return (\n        valueA.localeCompare(valueB, undefined, { sensitivity: \"base\" }) *\n        (sortDirection === \"asc\" ? 1 : -1)\n      );\n    });\n  }\n};\n\nexport default sortVisitors;\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table } from \"react-bootstrap\";\nimport { ArrowUpDown, ArrowUp, ArrowDown } from \"./VisitorTabele.styled\";\nimport ButtonsModal from \"../ButtonsModal/ButtonsModal\";\nimport visitorOperation from \"../../redux/visitors/operations\";\n\nimport {\n  selectSortColumn,\n  selectSortDirection,\n  selectVisitorsItems,\n} from \"../../redux/visitors/selectors\";\nimport {\n  setSortColumn,\n  setSortDirection,\n} from \"../../redux/visitors/sortSlice\";\nimport sortVisitors from \"../../utils/sortVisitors\";\n\nconst VisitorsTable = () => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [selectedVisitor, setSelectedVisitor] = useState(null);\n\n  const dispatch = useDispatch();\n  const sortColumn = useSelector(selectSortColumn);\n  const sortDirection = useSelector(selectSortDirection);\n\n  const visitors = useSelector(selectVisitorsItems);\n\n  useEffect(() => {\n    dispatch(visitorOperation.readAll());\n  }, [dispatch]);\n\n  const handleClickRow = (visitor) => {\n    setIsOpenModal(true);\n    setSelectedVisitor(visitor);\n  };\n\n  const handleSort = (column) => {\n    if (sortColumn === column) {\n      dispatch(setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\"));\n    } else {\n      dispatch(setSortColumn(column));\n      dispatch(setSortDirection(\"asc\"));\n    }\n  };\n\n  const sortedVisitors = [...visitors];\n  sortVisitors(sortedVisitors, sortColumn, sortDirection);\n\n  return (\n    <>\n      <Table striped bordered hover style={{ maxWidth: \"700px\" }}>\n        <thead>\n          <tr>\n            <th onClick={() => handleSort(\"name\")}>\n              Name\n              {(sortColumn === \"name\" && (\n                <span>\n                  {sortDirection === \"asc\" ? <ArrowUp /> : <ArrowDown />}\n                </span>\n              )) || <ArrowUpDown />}\n            </th>\n            <th onClick={() => handleSort(\"lastname\")}>\n              Last name\n              {(sortColumn === \"lastname\" && (\n                <span>\n                  {sortDirection === \"asc\" ? <ArrowUp /> : <ArrowDown />}\n                </span>\n              )) || <ArrowUpDown />}\n            </th>\n            <th onClick={() => handleSort(\"date\")}>\n              Time visit\n              {(sortColumn === \"date\" && (\n                <span>\n                  {sortDirection === \"asc\" ? <ArrowUp /> : <ArrowDown />}\n                </span>\n              )) || <ArrowUpDown />}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedVisitors.map((visitor) => {\n            return (\n              <tr key={visitor.id} onClick={() => handleClickRow(visitor)}>\n                <td>{visitor.name}</td>\n                <td>{visitor.lastname}</td>\n                <td>{visitor.date}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {isOpenModal && (\n        <ButtonsModal\n          visitor={selectedVisitor}\n          setIsOpenModal={setIsOpenModal}\n        />\n      )}\n    </>\n  );\n};\nexport default VisitorsTable;\n","import Spinner from \"react-bootstrap/Spinner\";\n\nfunction Loader() {\n  return <Spinner animation=\"border\" variant=\"primary\" />;\n}\n\nexport default Loader;\n","import { useSelector } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport VisitorsTable from \"../../components/VisitorsTable/VisitorsTable\";\nimport ButtonVisitor from \"../../components/ButtonVisitor/ButtonVisitor\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { selectIsLoading } from \"../../redux/visitors/selectors\";\n\nconst Visitors = () => {\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <Container className=\"py-4 px-3\">\n      <h1 className=\"mb-4\">Visitors in the building:</h1>\n      <Container className=\"d-flex flex-column justify-content-center align-items-center p-0\">\n        <VisitorsTable />\n        {isLoading ? <Loader /> : <ButtonVisitor name={\"Add visitors\"} />}\n      </Container>\n    </Container>\n  );\n};\n\nexport default Visitors;\n"],"names":["_ref","visitor","handleClose","setIsOpenModal","editForm","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","concat","name","_useState6","setName","_useState7","lastname","_useState8","setlastname","dispatch","useDispatch","handleChange","event","_event$currentTarget","currentTarget","value","_jsx","Container","className","children","_jsxs","Form","onSubmit","preventDefault","id","visitorOperation","update","date","dateToConvert","Date","getTime","dateObject","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","createData","create","Group","Label","Control","type","onChange","required","Button","variant","onClick","disabled","authOperation","login","style","width","placeholder","controlId","ArrowUpDown","styled","TiArrowUnsorted","_templateObject","_taggedTemplateLiteral","ArrowUp","TiArrowSortedUp","_templateObject2","ArrowDown","TiArrowSortedDown","_templateObject3","show","Modal","onHide","size","Header","closeButton","Title","Body","VisitorForm","remove","nameClass","setShow","_Fragment","VisitorModal","display","position","Dialog","fontSize","ButtonVisitor","selectVisitorsItems","state","visitors","items","selectSortColumn","sort","sortColumn","selectSortDirection","sortDirection","selectIsLoading","isLoading","a","b","valueA","valueB","localeCompare","undefined","sensitivity","isOpenModal","selectedVisitor","setSelectedVisitor","useSelector","useEffect","readAll","handleSort","column","setSortDirection","setSortColumn","sortedVisitors","_toConsumableArray","sortVisitors","Table","striped","bordered","hover","maxWidth","map","handleClickRow","ButtonsModal","Spinner","animation","VisitorsTable","Loader"],"sourceRoot":""}